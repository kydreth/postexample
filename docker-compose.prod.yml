version: '3.3'
services:
  postgres:
    container_name: postgresql
    hostname: postgresql
    image: postgres:latest
    restart: unless-stopped
    networks:
      - web
    volumes:
      - ./db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-postgres}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeThisToASecureP@SSW0RD!}
      PGDATA: "/var/lib/postgresql/data/pgdata"
#  pgadmin:
#    container_name: pgadmin
#    hostname: pgadmin
#    image: dpage/pgadmin4:latest
#    restart: unless-stopped
#    networks:
#      - web
#    ports:
#      - "8082:80"
#    expose:
#      - "5432"
#    environment:
#      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-post@example.com}
#      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-changeThisToASecureP@SSW0RD!}
  web:
    container_name: web
    hostname: web
    image: centos/web:latest
    restart: unless-stopped
    networks:
      - web
    volumes:
      - ./web/src/environments/environments.prod.ts:/opt/postexample/web/src/environments/environments.ts:ro
    ports:
      - "4200:4200"
  api:
    container_name: api
    hostname: api
    image: centos/api:latest
    restart: unless-stopped
    networks:
      - web
    ports:
      - "8080:8080"
    expose:
      - "5432"
    command: ["./wait-for-postgres.sh", "db"]
  nginx-prod:
    container_name: nginx-prod
    hostname: nginx-prod
    restart: unless-stopped
    image: staticfloat/nginx-certbot:latest
    networks:
      - web
    volumes:
      - ./nginx/prod.conf/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/prod.conf.d:/etc/nginx/user.conf.d:ro
      - letsencrypt:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "4200"
      - "8080"
      - "8082"
    environment:
      - CERTBOT_EMAIL=post@example.com
      - IS_STAGING=0
volumes:
  letsencrypt:
networks:
  web:
    driver: bridge
